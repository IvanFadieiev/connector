exit
$all_prod_imgs
exit
$all_prod_imgs
exit
arrr == nil
exit
arrr != nil
arrr
exit
arrr
exit
$err
exit
hashes.count
hashes.сщгте
hashes.each do |x|
hashes = $all_prod_imgs
 $all_prod_imgs
$all_prod_imgs
continue
$err
exit
continue
image_name
img_url
exit
nilus
parsed_data.map{ |a| nilus << a if (a.class != Integer )}
nilus
parsed_data.map{ |a| nilus << a if (a==nil)}
nilus = []
parsed_data
exit
byebug
exit
arrr
arrr[:item]
next
product_id
parsed_data
next
images
arrr[:item].map{ |a| images << a[:value] if (a[:key] == "url") }
images
arrr[:item]
next
exit
ext
exit
images
arrr[:item].map{ |a| images << a[:value] if (a[:key] == "url") } 
arrr[:item]
arrr[:item].map{ |a| a.map{ |a| images << a[:value] if (a[:key] == "url") } }
arrr[:item]
arrr.keys
arrr.class
arrr.count
arrr.map{ |a| a }
arrr.map{ |a| a.map{|v| v }
arrr.map{ |a| a.map{|v| v[:item]} }
arrr.map{ |a| a[:item] }
arrr.map{ |a| a }
arrr.map{ |a| a[:item].map{ |a|  a } }
arrr.map{ |a| a[:item].map{ |a|  a[:value] } }
arrr.map{ |a| a[:item].map{ |a| images << a[:value] if (a[:key] == "url") } }
arrr.map{ |a| a[:item].map{ |a| images << a[:value] if ((a[:key] == "url") ) } }
images = []
images
arrr[:item]
arrr
next
$client
product_id
exit
next
parsed_data
exit
"14_shopify_categories_ids".blank?
"1632_shopify_categories_ids".blank?
params
exit
params
exit
next
ids.blank?
@all_categories.count
category_id
exit
ids
cat_id
exit
cat_id[:category_id]
cat_id
ids
exit
params
exit
params
exit
Collection.first
Collection.last
Collection.all
exit
params
continue
params
continue
params
continue
@login.categories_parsed
@login
continue
url
continue
key
storeView
username
url
continue
url
continue
key
username
url
continue
storeview
key
username
url
continue
@login
Login.all
continue
params
