continue
product.magento_categories.group_by(&:category_id).keys.uniq.count
product.magento_categories.group_by(&:category_id).keys.uniq.map{|a| p a}
product.magento_categories.group_by(&:category_id).keys.uniq.map{|a| a}
product.magento_categories.group_by(&:category_id).keys.uniq
TargetCategoryImport.where(login_id: login.id, magento_category_id: magento_cat_id).map(&:shopify_category_id).uniq.map{|a| a}
TargetCategoryImport.where(login_id: login.id, magento_category_id: magento_cat_id).map(&:shopify_category_id).uniq
product.magento_categories.group_by(&:category_id).keys.uniq
exit
!cat[0].blank? == true
!cat[0].blank?
shop_cat.present?
shop_cat.exist?
shop_cat.blank?
shop_cat ==true
shop_cat = cat[2]
shop_cat = cat[3]
shop_cat = cat[2]
shop_cat = cat[1]
shop_cat = cat[0]
shop_cat = cat[0].target_category_import.shopify_category_id
next
cat
product.magento_categories.group_by(&:category_id).map{|a| a.second}
product.magento_categories.group_by(&:category_id)
product.magento_categories
cat
exit
continue
product.magento_categories.group_by(&:category_id).map{|a| a.second}.each do |cat|
next
continue
next
step
product
product.magento_categories.count
next
product.magento_categories.count
images_for_product[0].img_url
images_for_product[0].imag_url
images_for_product[0].image_url
next
continue
next
end
next
images_for_product.blank?
images_for_product = product.images
images_for_product.blank?
product.images.last.img_url
product.images
exit
continue
product.magento_categories.distinct
product.magento_categories
next
continue
next
@all_categories.count
@all_categories[0].category_id
next
